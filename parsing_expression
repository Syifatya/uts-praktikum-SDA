include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

typedef struct Node {
    char* data;
    struct Node* next;
} Node;

typedef struct {
    Node* top;
} Stack;

void push(Stack* s, char* item) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (!newNode) {
        printf("Alokasi memori gagal!\n");
        return;
    }
    newNode->data = strdup(item);  // Simpan salinan item
    newNode->next = s->top;
    s->top = newNode;
}

char* pop(Stack* s) {
    if (s->top == NULL) {
        printf("Stack kosong! Tidak bisa pop.\n");
        return NULL;
    }
    Node* temp = s->top;
    char* popped = strdup(temp->data);  // Salin data sebelum free
    s->top = temp->next;
    free(temp->data);  // Bebaskan string di dalam node
    free(temp);
    return popped;
}

char* peek(Stack* s) {
    if (s->top == NULL) {
        printf("Stack kosong! Tidak bisa di peek.\n");
        return NULL;
    }
    return s->top->data;
}
int isOperator(char ch);
int precedence(char op);
void infixToPostfix(char* infix, char* postfix);
void postfixToInfix(char* postfix, char* infix);
void infixToPrefix(char* infix, char* prefix);
void prefixToInfix(char* prefix, char* infix);
void postfixToPrefix(char* postfix, char* prefix);
void prefixToPostfix(char* prefix, char* postfix);

int main() {
    char infix[100], postfix[100], prefix[100];
    int choice;
    char lanjut;

     printf("=================================================\n");
    printf("| SELAMAT DATANG DI KALKULATOR NOTASI EKSPRESI! |\n");
    printf("=================================================\n");

    do {
        printf("\n=============================\n");
        printf("|   PILIH MENU KALKULATOR!  |\n");
        printf("============================\n");
        printf("|   1. Infix ke Postfix     |\n");
        printf("|   2. Postfix ke Infix     |\n");
        printf("|   3. Infix ke Prefix      |\n");
        printf("|   4. Prefix ke Infix      |\n");
        printf("|   5. Postfix ke Prefix    |\n");
        printf("|   6. Prefix ke Postfix    |\n");
        printf("|   7. Keluar               |\n");
        printf("============================\n");
        printf("Pilihan Anda: ");
        scanf("%d", &choice);
        getchar(); // Menghapus newline dari buffer setelah scanf

        if (choice == 7) {
            printf("\n====================================\n");
            printf("|    Anda keluar dari kalkulator   |\n");
            printf("====================================\n");
            break;
        }
